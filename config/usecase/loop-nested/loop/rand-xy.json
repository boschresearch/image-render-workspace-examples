// <LICENSE id="CC BY 4.0">
//
//   Image-Render Workspace 'simple'
//   Copyright 2022 Robert Bosch GmbH and its subsidiaries
//   
//   This work is licensed under the 
//   
//       Creative Commons Attribution 4.0 International License.
//   
//   To view a copy of this license, visit 
//       http://creativecommons.org/licenses/by/4.0/ 
//   or send a letter to 
//       Creative Commons, PO Box 1866, Mountain View, CA 94042, USA.
//   
//
// </LICENSE>
{
	sDTI: "/catharsys/manifest/control/loop/nested-range:1.0",
	sId: "${filebasename}",

	__locals__: {
		iStartX: "${action:args:iConfigStartX}",
		iCntX: "${action:args:iConfigCountX}",
		iStartY: "${action:args:iConfigStartY}",
		iCntY: "${action:args:iConfigCountY}",
	},

	__func_locals__: {
		mZwicky: { __includes__: ["zwicky"]},
	},

	lRanges: [
		{
			iMin: "${iStartX}",
			iMax: "$sum{${iStartX}, ${iCntX}, -1}",
			// iStep: 1,
		},
		{
			iMin: "${iStartY}",
			iMax: "$sum{${iStartY}, ${iCntY}, -1}",
			// iStep: 1,
		},
	],

	// lActiveIndices: [[2,2], [1,3]],

	mIterationConfig: {
		// Iteration indices are available as lambda parameters %0, %1, %2, etc.
		// IMPORTANT: You MUST NOT use $L{%0} as in the older loop constructs.
		//			  In this version the whole 'mIterationConfig' dictionary is
		//			  regarded as a lambda function where arguments are replaced.
        sId: "%0/%1",
		
		__globals__: {
			// Create a random number generator using the string "rand-x-$L{%0}" as seed
			rndX: "$rand.generator{rand-x-%0}",
			// Create a random number generator using the string "rand-y-$L{%1}" as seed
			rndY: "$rand.generator{rand-y-%1}",

			// Get a random number using the 'rndX' random generator
			fX: "$rand.uniform{$rndX, -2, 2}",
			// Get a random number using the 'rndY' random generator
			fY: "$rand.uniform{$rndY, 5, 10}",

			// Get a random dictionary from a Zwicky box
			mValues: "$rand.zwicky{$mZwicky}",
		}
	}
}
