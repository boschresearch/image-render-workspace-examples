{
    sDTI: "/catharsys/production:1.0",

    mGroups: {

        std: {
            sName: "Generative",
            sPathStructure: "!production/!rq/!project/?idx",
            // The 'mCategories' block is optional. It can be used to define
            // categories for the path structure variables.
            mCategories: {
                // User defined category 'bad'
                bad: {
                    // The DTI of the category. In this case, it is a boolean category.
                    sDTI: "/catharsys/production/category/boolean:1.0",
                    // The name of the category, used for display
                    sName: "Do not use",
                    // optional, default value, if not set, the default value is false
                    bDefautValue: false,
                    // the icon to use when the value is true.
                    // The available icon names can be found here: https://fonts.google.com/icons?icon.set=Material+Icons
                    sIconTrue: "star",
                    // the icon to use when the value is false.
                    sIconFalse: "star_border",
                    // the color to use when the value is true.
                    sIconColor: "red",
                },

                // User defined category 'quality'
                "quality": {
                    // The DTI of the category. In this case, it is a boolean group category.
                    // The boolean group category is used to define a set of values for a variable.
                    // The values are defined in the 'lGroup' array.
                    "sDTI": "/catharsys/production/category/boolean-group:1.0",
                    // The name of the category, used for display
                    "sName": "Quality",
                    // optional, default value, if not set, the default value is the first value of the 'lGroup' array.
                    "iDefaultValue": 1,
                    // The 'lGroup' array defines the values of the category.
                    "lGroup": [
                        {
                            // The description of the value, used for display (tooltip)
                            "sDescription": "Low quality",
                            // The icon to use for the value.
                            "sIcon": "thumb_down",
                            // The color to use for the value.
                            "sColor": "red"
                        },
                        {
                            // The description of the value, used for display (tooltip)
                            "sDescription": "Medium quality",
                            // The icon to use for the value.
                            "sIcon": "thumbs_up_down",
                            // The color to use for the value.
                            "sColor": "yellow"
                        },
                        {
                            // The description of the value, used for display (tooltip)
                            "sDescription": "Good quality",
                            // The icon to use for the value.
                            "sIcon": "thumb_up",
                            // The color to use for the value.
                            "sColor": "green"
                        }
                    ]
                }

            },
            mVars: {
                idx: {
                    sName: "Configuration Index",
                    // lCategories: ["bad"],
                    lCategories: ["bad", "quality"],
                },
            },
            // The 'mSystemVars' block is optional. It can be used to define
            // categories for the Catharsys system variables.
            mSystemVars: {
                // The 'frame' variable is a Catharsys system variable.
                // It is used to define the frame of the production.
                frame: {
                    // currently, only the 'lCategories' array is supported.
                    lCategories: ["bad", "quality"],
                }
            },
            mArtefacts: {
                image: {
                    sDTI: "/catharsys/production/artefact/image/png:1.0",
                    sName: "Image",
                    sPathStructure: "Image/!frame",
                },
                depth: {
                    sDTI: "/catharsys/production/artefact/image/png:1.0",
                    sName: "Depth and a very-long_text/to/test the display of long labels",
                    sPathStructure: "AT_Depth/depth/Preview/!frame",
                },
                gen: {
                    sDTI: "/catharsys/production/artefact/image/png:1.0",
                    sName: "Generative",
                    // Note that a USER variable 'frame' is used here.
                    // The USER variable 'frame' is defined in the 'mVars' block, and is parsed as defined in the 'mVars' block.
                    // The reason to use a user variable with the same name as a system variable is to be able to use the same
                    // variable in the path structure of different artefacts, while defining a different parsing rule for each artefact.
                    // In the visualisation, the user variable 'frame' and the system variable 'frame' will be regarded as a common variable.
                    // This means that all artefacts with same frame id are grouped together. So we can see the source image grouped with the
                    // associated generative images
                    sPathStructure: "Takuma-Diffusers/?pidx/?dwidx/?frame",
                    mVars: {
                        pidx: {
                            sName: "Prompt Index",
                            lCategories: ["bad", "quality"],
                        },
                        dwidx: {
                            sName: "Depth Weight Index",
                        },
                        frame: {
                            sName: "Image",
                            // The 'sRegExParseValue' and 'sRegExReplaceValue' are used to parse the value of the variable.
                            // In this case, the value of the variable is a file name, and we want to extract the frame number from the file name.
                            // The generative action does not create files with the default frame name format, so we need to parse the file name.
                            sRegExParseValue: "^Frame_[0]*(\\d+)_uint8png\\.png",
                            sRegExReplaceValue: "\\1",
                        },
                    }
                }
            }
        },
    
    }
}